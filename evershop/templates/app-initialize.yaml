apiVersion: batch/v1
kind: Job
metadata:
  name: evershop-initialize-{{ .Chart.Version | replace "+" "-" }}-{{ .Chart.AppVersion | replace "+" "-" }}
  namespace: {{ .Values.appConfig.namespace }}
spec:
  template:
    spec:
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 10.96.0.10 # Kubernetes DNS service
      initContainers:
      - name: wait-for-postgres
        image: busybox:latest
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', '
          until nc -z -v postgres.evershop.svc.cluster.local 5432; do 
            echo "Waiting for postgres..."; 
            sleep 2; 
          done;']
      - name: wait-for-npm
        image: busybox:latest
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', '
          until nc -z -v registry.npmjs.org 443; do
            echo "Waiting for npm registry...";
            sleep 2;
          done;']
      containers:
      - name: evershop-init
        image: node:18-alpine
        envFrom:
        - configMapRef:
            name: evershop-config
        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: evershop-secret
              key: DB_PASSWORD
        command: ["/bin/sh", "-c"]
        args:
          - |
            mkdir -p /repo
            echo "Installing git..."
            apk add --no-cache git
            echo "Cloning or pulling from evershop repository..."
            REPO_URL="https://github.com/TEKNO-BilkentAssignments/ctis486-evershop-helm"
            DEST_DIR="/repo"
            [ -d "$DEST_DIR" ] && [ "$(ls -A "$DEST_DIR")" ] && (cd "$DEST_DIR" && git pull) || git clone "$REPO_URL" "$DEST_DIR"
            cd /repo/evershop/app
            [ -e "/repo/evershop/app/initialized" ] && rm initialized # Remove initialized flag file if exists
            echo "Installing dependencies..."
            npm install
            echo "Building evershop app..."
            npm run build
            echo "Creating admin user..."
            npx evershop user:create --email "admin@goktug.dev" --password "Ctis486." --name "GoktugY"
            echo "Changing store name..."
            npm run change:storeName
            echo "Initialization complete."
            touch initialized # Create initialized flag file
        volumeMounts:
        - mountPath: /repo
          name: repo-volume
      restartPolicy: OnFailure
      volumes:
      - name: repo-volume
        persistentVolumeClaim:
          claimName: repo-pvc