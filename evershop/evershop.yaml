apiVersion: apps/v1
kind: Deployment
metadata:
  name: evershop
  namespace: evershop
spec:
  replicas: 3
  selector:
    matchLabels:
      app: evershop
  template:
    metadata:
      labels:
        app: evershop
    spec:
      dnsConfig:
        nameservers:
        - 8.8.8.8
        - 8.8.4.4
        searches:
        - evershop.svc.cluster.local
        - svc.cluster.local
        - cluster.local
        options:
        - name: ndots
          value: "5"
      dnsPolicy: "None"
      initContainers:
      - name: wait-for-postgres
        image: busybox:latest
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', '
          echo "nameserver 10.96.0.10" > /etc/resolv.conf;  # Kubernetes DNS service
          echo "search evershop.svc.cluster.local svc.cluster.local cluster.local" >> /etc/resolv.conf;
          until nc -z -v postgres.evershop.svc.cluster.local 5432; do 
            echo "Waiting for postgres..."; 
            sleep 2; 
          done;']
      - name: wait-for-npm
        image: busybox:latest
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', '
          echo "nameserver 8.8.8.8" > /etc/resolv.conf;
          echo "nameserver 8.8.4.4" >> /etc/resolv.conf;
          until nc -z -v registry.npmjs.org 443; do
            echo "Waiting for npm registry...";
            sleep 2;
          done;']
      containers:
      - name: evershop
        image: node:18-alpine
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: evershop-config
        - secretRef:
            name: evershop-secret
        command: ["/bin/sh", "-c"]
        args:
          - |
            mkdir -p /app
            cd /app
            echo '{"name": "evershop-app", "version": "1.0.0"}' > package.json
            npm config set registry http://registry.npmjs.org/
            npm install -g npm@9
            npm install @evershop/evershop
            npm run setup
            npm run build
            npm run start
---
apiVersion: v1
kind: Service
metadata:
  name: evershop
  namespace: evershop
spec:
  selector:
    app: evershop
  ports:
  - port: 80
    targetPort: 3000
  type: LoadBalancer
  externalTrafficPolicy: Local
